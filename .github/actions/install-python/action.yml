name: Install Python
description: Action for installing Python and Poetry

inputs:
  PYTHON_VERSION:
    description: "Version of Python to install"
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.PYTHON_VERSION }}

    - name: Load Cached pyenv
      id: pyenv-cache
      uses: actions/cache@v3
      with:
        path: /opt/hostedtoolcache/pyenv_root/
        key: pyenv-${{ runner.os }}-${{ inputs.PYTHON_VERSION }}

    - name: Set up pyenv
      if: steps.pyenv-cache.outputs.cache-hit != 'true'
      uses: gabrielfalcao/pyenv-action@v17
      with:
        default: "${{ inputs.PYTHON_VERSION }}"
        command: pyenv global ${{ inputs.PYTHON_VERSION }}

    - name: Set up Poetry
      uses: abatilo/actions-poetry@v2.3.0
      with:
        poetry-version: 1.7

    - name: Setup Poetry config
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
      shell: bash

    # - name: Load Cached pyenv
    #   id: pyenv-cache
    #   uses: actions/cache@v3
    #   with:
    #     path: /home/runner/.pyenv
    #     key: pyenv-${{ runner.os }}-${{ inputs.PYTHON_VERSION }}

    # - name: Install pyenv
    #   if: steps.pyenv-cache.outputs.cache-hit != 'true'
    #   run: |
    #     git clone https://github.com/pyenv/pyenv.git ~/.pyenv
    #     echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
    #     echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
    #     echo 'eval "$(pyenv init -)"' >> ~/.bashrc
    #     echo 'export PATH=$PATH:/home/runner/.pyenv/bin'
    #     /home/runner/.pyenv/bin/pyenv install ${{ inputs.PYTHON_VERSION }}
    #     /home/runner/.pyenv/bin/pyenv global ${{ inputs.PYTHON_VERSION }}
    #   shell: bash
    
    # - name: Install poetry
    #   run: |
    #     pip3 install --upgrade poetry
    #     poetry config virtualenvs.in-project true
    #     poetry config virtualenvs.prefer-active-python true
    #   shell: bash

    - name: Load Cached Virtualenv
      id: venv-cache
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ inputs.PYTHON_VERSION }}-${{ runner.os }}-${{ hashFiles('**/pyproject.toml', '**/poetry.lock') }}

    - name: Install dependencies and project in dev mode
      if: steps.venv-cache.outputs.cache-hit != 'true'
      run: make install
      shell: bash
